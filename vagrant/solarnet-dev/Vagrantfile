# -*- mode: ruby -*-
# vi: set ft=ruby :

#------------------------------------------------------------------------------
# VM Environment and parameter configuration
# These settings can be overridden by creating a file named Vagrantfile.local
#------------------------------------------------------------------------------
vm_define="solarnet"
bootstrap_path="bootstrap.sh"
vm_name="SolarNet Dev"
basebox_name="ubuntu/jammy64"
no_of_cpus=1
memory_size=2048
vm_gui=true

git_branch="develop"
git_repos="build external common central node"
postgres_version=12
java_version="8 11 17"
solarnet_host="solarnetworkdev.net"

# Note xserver-xorg-legacy was only way I could find to get X to start as solardev on login from console
desktop_packages="xorg xserver-xorg-legacy xserver-xorg-video-vesa xserver-xorg-video-vmware xfonts-scalable fluxbox eterm xfonts-terminus virtualbox-guest-utils virtualbox-guest-x11 xterm --no-install-recommends"

# Read any user specific configuration overrides - cater for this file not existing
local_env_config_file="Vagrantfile.local"
begin
  localsettings = File.read local_env_config_file
  eval localsettings
  rescue Errno::ENOENT
    #print "No "+local_env_config_file+" found\n"
end

# Check for required plugin
unless Vagrant.has_plugin?("vagrant-disksize")
  puts 'vagrant-disksize plugin is required. To install run: `vagrant plugin install vagrant-disksize`'
  abort
end

Vagrant.configure(2) do |config|
  config.vm.define vm_define
  config.vm.box = basebox_name

  # Use the https://github.com/sprotheroe/vagrant-disksize plugin
  config.disksize.size = '10GB'

  config.vm.network "forwarded_port", guest: 1883, host: 11883 # MQTT (SolarQueue)
  config.vm.network "forwarded_port", guest: 5432, host: 15432 # Postgres
  config.vm.network "forwarded_port", guest: 8080, host: 18080 # SolarNode
  config.vm.network "forwarded_port", guest: 9080, host: 19080 # SolarJobs
  config.vm.network "forwarded_port", guest: 9081, host: 19081 # SolarIn
  config.vm.network "forwarded_port", guest: 9082, host: 19082 # SolarQuery
  config.vm.network "forwarded_port", guest: 9083, host: 19083 # SolarUser
  config.vm.network "forwarded_port", guest: 9483, host: 19483 # SolarIn HTTPS

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share folders with the guest VM.
  config.vm.synced_folder ".", "/vagrant", :mount_options => ["dmode=755"]
  config.vm.synced_folder "../../bin", "/vagrant/bin", :mount_options => ["dmode=755"]
  config.vm.synced_folder "../../conf", "/vagrant/conf", :mount_options => ["dmode=755"]
  config.vm.synced_folder "../../eclipse", "/vagrant/eclipse", :mount_options => ["dmode=755"]

  # VirtualBox provider config
  config.vm.provider "virtualbox" do |vb|
    vb.gui = vm_gui
    vb.memory = memory_size
    vb.cpus = no_of_cpus
    vb.name = vm_name
    vb.customize ["modifyvm", :id, "--graphicscontroller", "vmsvga"]
    vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
    vb.customize ["modifyvm", :id, "--vram", "64"]
  end
  
  prov_args = [];
  if !java_version.to_s.empty?
    prov_args.push('-j', java_version.to_s)
  end
  if !postgres_version.to_s.empty?
    prov_args.push('-p', postgres_version.to_s)
  end
  if !solarnet_host.empty?
    prov_args.push('-h', solarnet_host)
  end
  if !git_branch.empty?
    prov_args.push('-b',  git_branch)
  end
  if !git_repos.empty?
    prov_args.push('-r', git_repos)
  end
  if vm_gui
    prov_args.push('-U', desktop_packages)
  end

  config.vm.provision :shell, path: bootstrap_path, :args => prov_args
end
